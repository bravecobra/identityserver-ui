version: '3.4'

services:
  postgresdb:
    image: "postgres"
    container_name: "postgresdb"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=identityserverui
    networks:
      identityserverui: null
    ports:
      - "5432:5432"
    volumes:
      - postgresdb:/var/lib/postgresql/data
  sts:
    image: ${DOCKER_REGISTRY-}identityserversts
    container_name: "sts"
    build:
      context: .
      dockerfile: src/IdentityServerSts/Dockerfile
    ports:
      - "5000:80"
    depends_on:
      - postgresdb
    networks:
      identityserverui: null
  api:
    image: ${DOCKER_REGISTRY-}api
    container_name: "api"
    build:
      context: .
      dockerfile: src/Api/Dockerfile
    ports:
      - "5001:80"
    networks:
      identityserverui: null
  jsclient:
    image: ${DOCKER_REGISTRY-}jsclient
    container_name: "jsclient"
    build:
      context: .
      dockerfile: src/JavaScriptClient/Dockerfile
    networks:
      identityserverui: null
  mvcclient:
    image: ${DOCKER_REGISTRY-}mvcclient
    container_name: "mvcclient"
    build:
      context: .
      dockerfile: src/MVCClient/Dockerfile
    ports:
      - "5002:80"
    networks:
      identityserverui: null
networks:
  identityserverui:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.0.0/24

volumes:
  postgresdb:
    driver: local
